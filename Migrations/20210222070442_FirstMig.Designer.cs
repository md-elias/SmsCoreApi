// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SmsCoreApi.Data;

namespace SmsCoreApi.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20210222070442_FirstMig")]
    partial class FirstMig
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.3")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("SmsCoreApi.Models.Branch", b =>
                {
                    b.Property<int>("BranchID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BranchName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CityID")
                        .HasColumnType("int");

                    b.Property<int>("CountryID")
                        .HasColumnType("int");

                    b.Property<int>("PostalCode")
                        .HasColumnType("int");

                    b.Property<string>("StreetAddress")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("BranchID");

                    b.HasIndex("CityID");

                    b.HasIndex("CountryID");

                    b.ToTable("Branches");
                });

            modelBuilder.Entity("SmsCoreApi.Models.City", b =>
                {
                    b.Property<int>("CityID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CityName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CityID");

                    b.ToTable("Cities");

                    b.HasData(
                        new
                        {
                            CityID = 1,
                            CityName = "Chittagong"
                        },
                        new
                        {
                            CityID = 2,
                            CityName = "Dhaka"
                        },
                        new
                        {
                            CityID = 3,
                            CityName = "Barishal"
                        });
                });

            modelBuilder.Entity("SmsCoreApi.Models.Country", b =>
                {
                    b.Property<int>("CountryID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CountryName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CountryID");

                    b.ToTable("Countries");

                    b.HasData(
                        new
                        {
                            CountryID = 1,
                            CountryName = "Bangladesh"
                        },
                        new
                        {
                            CountryID = 2,
                            CountryName = "Pakistan"
                        },
                        new
                        {
                            CountryID = 3,
                            CountryName = "Australia"
                        });
                });

            modelBuilder.Entity("SmsCoreApi.Models.Designation", b =>
                {
                    b.Property<int>("DesignationID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("DesignationName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("MaxSalary")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("MinSalary")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("DesignationID");

                    b.ToTable("Designations");
                });

            modelBuilder.Entity("SmsCoreApi.Models.EmpJobHistory", b =>
                {
                    b.Property<int>("EmpJobHistoryID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BranchID")
                        .HasColumnType("int");

                    b.Property<int>("DesignationID")
                        .HasColumnType("int");

                    b.Property<int>("EmployeeID")
                        .HasColumnType("int");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.HasKey("EmpJobHistoryID");

                    b.HasIndex("BranchID");

                    b.HasIndex("DesignationID");

                    b.HasIndex("EmployeeID");

                    b.ToTable("EmpJobHistories");
                });

            modelBuilder.Entity("SmsCoreApi.Models.Employee", b =>
                {
                    b.Property<int>("EmployeeID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("BranchID")
                        .HasColumnType("int");

                    b.Property<int>("CityID")
                        .HasColumnType("int");

                    b.Property<int>("CountryID")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<int>("DesignationID")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmployeeImage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmployeeName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Gender")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("HireDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("MaritalStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PostalCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Qualification")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Religion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Salary")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("EmployeeID");

                    b.HasIndex("BranchID");

                    b.HasIndex("CityID");

                    b.HasIndex("CountryID");

                    b.HasIndex("DesignationID");

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("SmsCoreApi.Models.Branch", b =>
                {
                    b.HasOne("SmsCoreApi.Models.City", "City")
                        .WithMany("Branches")
                        .HasForeignKey("CityID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("SmsCoreApi.Models.Country", "Country")
                        .WithMany("Branches")
                        .HasForeignKey("CountryID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("City");

                    b.Navigation("Country");
                });

            modelBuilder.Entity("SmsCoreApi.Models.EmpJobHistory", b =>
                {
                    b.HasOne("SmsCoreApi.Models.Branch", "Branch")
                        .WithMany("EmpJobHistories")
                        .HasForeignKey("BranchID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("SmsCoreApi.Models.Designation", "Designation")
                        .WithMany("EmpJobHistories")
                        .HasForeignKey("DesignationID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("SmsCoreApi.Models.Employee", "Employee")
                        .WithMany("EmpJobHistories")
                        .HasForeignKey("EmployeeID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Branch");

                    b.Navigation("Designation");

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("SmsCoreApi.Models.Employee", b =>
                {
                    b.HasOne("SmsCoreApi.Models.Branch", "Branch")
                        .WithMany("Employees")
                        .HasForeignKey("BranchID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("SmsCoreApi.Models.City", "City")
                        .WithMany("Employees")
                        .HasForeignKey("CityID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("SmsCoreApi.Models.Country", "Country")
                        .WithMany("Employees")
                        .HasForeignKey("CountryID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("SmsCoreApi.Models.Designation", "Designation")
                        .WithMany("Employees")
                        .HasForeignKey("DesignationID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Branch");

                    b.Navigation("City");

                    b.Navigation("Country");

                    b.Navigation("Designation");
                });

            modelBuilder.Entity("SmsCoreApi.Models.Branch", b =>
                {
                    b.Navigation("EmpJobHistories");

                    b.Navigation("Employees");
                });

            modelBuilder.Entity("SmsCoreApi.Models.City", b =>
                {
                    b.Navigation("Branches");

                    b.Navigation("Employees");
                });

            modelBuilder.Entity("SmsCoreApi.Models.Country", b =>
                {
                    b.Navigation("Branches");

                    b.Navigation("Employees");
                });

            modelBuilder.Entity("SmsCoreApi.Models.Designation", b =>
                {
                    b.Navigation("EmpJobHistories");

                    b.Navigation("Employees");
                });

            modelBuilder.Entity("SmsCoreApi.Models.Employee", b =>
                {
                    b.Navigation("EmpJobHistories");
                });
#pragma warning restore 612, 618
        }
    }
}
